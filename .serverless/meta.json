{
  "/Users/joemiddie13/Dominican/Summer-2024/Advanced-Web-Patterns/challenge-1/my-express-application": {
    "versionSfCore": null,
    "versionFramework": "4.1.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "servicePath": "/Users/joemiddie13/Dominican/Summer-2024/Advanced-Web-Patterns/challenge-1/my-express-application",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "my-express-application",
      "custom": {
        "tableName": "users-table-${self:provider.stage}"
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs14.x",
        "stage": "dev",
        "region": "us-east-1",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem"
            ],
            "Resource": [
              {
                "Fn::GetAtt": [
                  "UsersDynamoDBTable",
                  "Arn"
                ]
              }
            ]
          }
        ],
        "environment": {
          "USERS_TABLE": "${self:custom.tableName}"
        }
      },
      "functions": {
        "app": {
          "handler": "index.handler",
          "events": [
            {
              "http": "ANY /"
            },
            {
              "http": "ANY {proxy+}"
            }
          ]
        }
      },
      "resources": {
        "Resources": {
          "UsersDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "${self:custom.tableName}"
            }
          }
        }
      }
    },
    "serviceRawFile": "service: my-express-application\n\ncustom:\n  tableName: 'users-table-${self:provider.stage}'\n\nprovider:\n  name: aws\n  runtime: nodejs14.x\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"UsersDynamoDBTable\", \"Arn\" ] }\n  environment:\n    USERS_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: 'ANY {proxy+}'\n\nresources:\n  Resources:\n    UsersDynamoDBTable:\n      Type: 'AWS::DynamoDB::Table'\n      Properties:\n        AttributeDefinitions:\n          - AttributeName: userId\n            AttributeType: S\n        KeySchema:\n          - AttributeName: userId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "AWS credentials missing or invalid. Run \"serverless\" to set up AWS credentials, or learn more in our docs: http://slss.io/aws-creds-setup. Original error from AWS: Could not load credentials from any providers",
      "code": "AWS_CREDENTIALS_MISSING"
    },
    "machineId": "d1539f23ba18457ba543b8a14b729a7a",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "5a45b191-0ce6-41df-9817-93f8b80b18a1",
    "orgName": "joemiddie13",
    "userId": "kBZ2jfx1yFdCK4pt4v",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "joemiddie13",
    "subscription": null,
    "userEmail": "joemiddie13@gmail.com",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}